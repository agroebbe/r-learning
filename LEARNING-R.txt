WEB
---
- data analysis techniques: http://www.r-tutor.com/
- r refcard
- http://www.statmethods.net/
- http://www.cookbook-r.com/Manipulating_data/Comparing_vectors_or_factors_with_NA/

- info on stats: http://rtutorialseries.blogspot.be/2012/03/r-tutorial-series-centering-variables.html

- Rstudio: console: https://support.rstudio.com/hc/en-us/articles/200711853-Keyboard-Shortcuts



OPEN QUESTIONS
--------------
- learn to understand:
library(doBy)
summaryBy(mpg + wt ~ cyl + vs, data = mtcars, 
   FUN = function(x) { c(m = mean(x), s = sd(x)) } )
# produces mpg.m wt.m mpg.s wt.s for each 
# combination of the levels of cyl and vs

- see what plot & ggplot2 can do...
- working with questions
- def functions
- histogram 2 var from input data set and then get prob(X|Y) and plot
- usable datasets in R
- standard dev why n-1 ?? relearn

- apply(function, rowsOrCols)
- order function for sorting

R-HARD
------
* use <- or -> for assignment
* ls() lists variables but not those with a dot
* $ is a bit like the . in Java
* x[-n] returns a copy of x with the nth element removed
* x[1]
* x[(2,3)]
* x[0] does nothing !
* x[(FALSE,TRUE,TRUE)] --> to take elements
* assignment to selection vector:
x[x > 3] <- 7 turns (3, 1, 4, 1, 5, 9) into (3, 1, 7, 1, 7, 7)
x[x > 3] <- c(10, 11, 12) would produce (3, 1, 10, 1, 11, 12)
* seq(a,b,n) a<= & <=b & steps of size n so a, a+n,...
* a:b = seq(a,b,1)
* seq(a,b,length=n) --> seq(a,b,(b-a)/(n-1))
* convert TO: as.integer(), as.character()
* someList[[1]] or someList$nameOfFirstOne
** (list extends -> insert NULL values)
** list get only when exists
* arrray(vector, dim) --> fills column-wise
* array(vector, dim, by.row=TRUE) --> fills row-wise
* NaN & NA
* need to handle NA's
* is.nan & is.na (!! is.na gives true for NaN and for NA !!)
* a function returns the value of its last line
* f <- function(a,b=10) { ... } for default values
* f <- function(a,b=max(a), ...) --> so more sophisticaded default values possible
* call with named arguments
* pass by value, best is to return a list as output
* complex numbers e.g. 0+1i




LEARNING
--------
* sessionInfo()

* plot, legend, axis, mtext, grid, 
par: plotting parameters to be specified before
the plots. Arguments: e.g. mfrow=c(1,3)):
number of figures per page (1 row, 3 columns);
  new=TRUE: draw plot over previous plot.


* library(zoo) na.approx --> interpolation
* library(zoo) rollmean --> moving average
* cumsum
* paste = concat, substr
* aggregate(x,by=list(some-values-here),FUN="mean")

* example DATA info: library(help = datasets)

* timesieries (monthly data): 
 z <- ts(matrix(rnorm(300), 100, 3), start = c(1961, 1), frequency = 12)

* data to work on: library(help = "datasets")

* as.numeric(...), as.character(...)
* is.na(...)
* x$n --> element of x named n --> x[["n"]]
* rowSums(m), rowMeans(m), ...
* colSums(m), colMeans(), ...

* rbind & cbind --> combine row of col into matrix

* select elements of a vector: v[c(F,T,F)]
* so also reason why d[names(d)=="a"] works

* date1=strptime( c("20100225230000", "20100226010000"), format="%Y%m%d%H%M%S", tz="CET")
* remove NA's: max(c(1,2,NA), na.rm=TRUE)

* write.table & read.table

* plyr --> need R v 3.1.1
install R packages
install codetools
install plyr

* library(plyr)
  df = rename(df,c("oldName"="newName"))
  OR
  names(df)[names(df)="oldName"] = newName

* install new R dependencies in ubuntu: http://cran.rstudio.com/bin/linux/ubuntu/

* pairs(df) --> scatterplot matrix

* functions work on objects, make frame objects and then apply mean: mean( data.frame(x,y) )

* par()

*points(t$c, pch=20, cex=4,col=rgb(0,0,1,0.3))
--- pch = plot symbol
--- cex = factor to scale (e.g. x 4)

* plot(t$a, type="l", ylim=range(t),lwd=3, col=rgb(1,0,0,0.3))
--- lwd = line width
* points(t$c, pch=20, cex=4,col=rgb(0,0,1,0.3))
* lines(t$b, type="s", lwd=4,col=rgb(0.3,0.4,0.3,0.9))

* plot(rnorm(100), type="l", col="gold")

* L = list(one=1, two=c(1,2), five=seq(0,1,length=5))
  names(L)

* plot(x <- sort(rnorm(47)), type = "s", main = "plot(x, type = \"s\")")
--- makes a plot
* points(x, cex = .5, col = "dark red")
--- makes a point plot

* t = data.frame(x = c(11,12,14), y = c(19,20,21), z = c(10,9,7))

* adding data to a frame
df1 <- data.frame(a = factor(c('x','x','x','y','y','y', NA, NA, NA)),
                  b = factor(c('x','y', NA,'x','y', NA,'x','y', NA)))
data.frame(df1, isSame = someFUNChere(df1$a, df1$b))

* v = seq(from=0, to=1, by=0.25)
* mat=matrix(data=c(9,2,3,4,5,6),ncol=3)
* rnorm, runif
* help.search("random")

* ctrl+enter : run line or selection in console
* working dir (getwd(),setwd(name)): file IO & figure IO
* concatenate: v=c(1,2,3)


* tab completion
* sum
* mean
* sample

* rnorm(n=10, mean=1.2, sd=3.4)
--- 10 samples from a normal distribution
* help(rnorm) --> see the defaults

* seq(1,10,1) === 1:10
* seq.int(1,10,1) === 1:10

* example(rnorm)
* curve
* mtext

* help.start()

* source("something.R")



